// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class TokenOwnerEntity extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save TokenOwnerEntity entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save TokenOwnerEntity entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("TokenOwnerEntity", id.toString(), this);
  }

  static load(id: string): TokenOwnerEntity | null {
    return store.get("TokenOwnerEntity", id) as TokenOwnerEntity | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get token_type(): string {
    let value = this.get("token_type");
    return value.toString();
  }

  set token_type(value: string) {
    this.set("token_type", Value.fromString(value));
  }

  get token_id(): BigInt {
    let value = this.get("token_id");
    return value.toBigInt();
  }

  set token_id(value: BigInt) {
    this.set("token_id", Value.fromBigInt(value));
  }

  get token_owner(): string {
    let value = this.get("token_owner");
    return value.toString();
  }

  set token_owner(value: string) {
    this.set("token_owner", Value.fromString(value));
  }
}
